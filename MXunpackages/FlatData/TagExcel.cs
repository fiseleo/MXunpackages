// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace Plana.FlatData
{

using global::System;
using global::System.Collections.Generic;
using global::Plana.Crypto;
using global::Google.FlatBuffers;

public struct TagExcel : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_24_3_25(); }
  public static TagExcel GetRootAsTagExcel(ByteBuffer _bb) { return GetRootAsTagExcel(_bb, new TagExcel()); }
  public static TagExcel GetRootAsTagExcel(ByteBuffer _bb, TagExcel obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public TagExcel __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public Plana.FlatData.Tag Furniture { get { int o = __p.__offset(4); return o != 0 ? (Plana.FlatData.Tag)__p.bb.GetInt(o + __p.bb_pos) : Plana.FlatData.Tag.A; } }
  public Plana.FlatData.Club None { get { int o = __p.__offset(6); return o != 0 ? (Plana.FlatData.Club)__p.bb.GetInt(o + __p.bb_pos) : Plana.FlatData.Club.None; } }

  public static Offset<Plana.FlatData.TagExcel> CreateTagExcel(FlatBufferBuilder builder,
      Plana.FlatData.Tag Furniture = Plana.FlatData.Tag.A,
      Plana.FlatData.Club None = Plana.FlatData.Club.None) {
    builder.StartTable(2);
    TagExcel.AddNone(builder, None);
    TagExcel.AddFurniture(builder, Furniture);
    return TagExcel.EndTagExcel(builder);
  }

  public static void StartTagExcel(FlatBufferBuilder builder) { builder.StartTable(2); }
  public static void AddFurniture(FlatBufferBuilder builder, Plana.FlatData.Tag furniture) { builder.AddInt(0, (int)furniture, 0); }
  public static void AddNone(FlatBufferBuilder builder, Plana.FlatData.Club none) { builder.AddInt(1, (int)none, 0); }
  public static Offset<Plana.FlatData.TagExcel> EndTagExcel(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<Plana.FlatData.TagExcel>(o);
  }
  public TagExcelT UnPack() {
    var _o = new TagExcelT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(TagExcelT _o) {
		byte[] key = TableEncryptionService.CreateKey("Tag");
    _o.Furniture = TableEncryptionService.Convert(this.Furniture, key);
    _o.None = TableEncryptionService.Convert(this.None, key);
  }
  public static Offset<Plana.FlatData.TagExcel> Pack(FlatBufferBuilder builder, TagExcelT _o) {
    if (_o == null) return default(Offset<Plana.FlatData.TagExcel>);
    return CreateTagExcel(
      builder,
      _o.Furniture,
      _o.None);
  }
}

public class TagExcelT
{
  public Plana.FlatData.Tag Furniture { get; set; }
  public Plana.FlatData.Club None { get; set; }

  public TagExcelT() {
    this.Furniture = Plana.FlatData.Tag.A;
    this.None = Plana.FlatData.Club.None;
  }
}


static public class TagExcelVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyField(tablePos, 4 /*Furniture*/, 4 /*Plana.FlatData.Tag*/, 4, false)
      && verifier.VerifyField(tablePos, 6 /*None*/, 4 /*Plana.FlatData.Club*/, 4, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}

}
